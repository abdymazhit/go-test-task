// Code generated by qtc from "productsPage.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

// Page of products
//

//line ../templates/productsPage.qtpl:3
package templates

//line ../templates/productsPage.qtpl:3
import (
	"github.com/abdymazhit/go-test-task/model"
)

//line ../templates/productsPage.qtpl:7
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line ../templates/productsPage.qtpl:7
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line ../templates/productsPage.qtpl:8
type ProductsPage struct {
	Products []model.Product
}

//line ../templates/productsPage.qtpl:13
func (p *ProductsPage) StreamBody(qw422016 *qt422016.Writer) {
//line ../templates/productsPage.qtpl:13
	qw422016.N().S(`
<html lang="en">
<head>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
</head>

<body>
    <h5 id="error"></h5>

    <a href="/product/add">
        <button type="button">Создать продукт</button>
    </a>

    <br>
    <br>

    <form id="form">
        <input type="text" name="searchName" placeholder="Name">
        <button type="submit">Поиск</button>
        <h5 id="searchedProduct"></h5>
    </form>

    <table>
        <tr>
            <th>ID</th>
            <th>Name</th>
            <th>Price</th>
        </tr>

        `)
//line ../templates/productsPage.qtpl:43
	for _, product := range p.Products {
//line ../templates/productsPage.qtpl:43
		qw422016.N().S(`
        <tr>
            <td>`)
//line ../templates/productsPage.qtpl:45
		qw422016.N().D(product.Id)
//line ../templates/productsPage.qtpl:45
		qw422016.N().S(`</td>
            <td>`)
//line ../templates/productsPage.qtpl:46
		qw422016.E().S(product.Name)
//line ../templates/productsPage.qtpl:46
		qw422016.N().S(`</td>
            <td>`)
//line ../templates/productsPage.qtpl:47
		qw422016.N().D(product.Price)
//line ../templates/productsPage.qtpl:47
		qw422016.N().S(`</td>
            <td>
                <a href="/product/edit/`)
//line ../templates/productsPage.qtpl:49
		qw422016.N().D(product.Id)
//line ../templates/productsPage.qtpl:49
		qw422016.N().S(`">
                    <button type="button">Редактировать</button>
                </a>
            </td>
            <td>
                <input type="button" value="Удалить" onclick="deleteProduct(`)
//line ../templates/productsPage.qtpl:54
		qw422016.N().D(product.Id)
//line ../templates/productsPage.qtpl:54
		qw422016.N().S(`);" />
            </td>
        </tr>
        `)
//line ../templates/productsPage.qtpl:57
	}
//line ../templates/productsPage.qtpl:57
	qw422016.N().S(`
    </table>
</body>

<script>
    var form = document.getElementById('form');
    form.addEventListener('submit', function(event) {
        event.preventDefault();

        var formData = new FormData(form), result = {};
        for (var entry of formData.entries()) {
            result[entry[0]] = entry[1];
        }

        var xmlHttp = new XMLHttpRequest();
        xmlHttp.open("POST", "/q/product-search-by-name", false);
        xmlHttp.send(JSON.stringify(result));

        var jsonData = JSON.parse(xmlHttp.responseText);
        console.log(jsonData)
        if (jsonData.status === "failure") {
            document.getElementById("error").innerHTML = jsonData.error;
        } else {
            document.getElementById("searchedProduct").innerText = "Id: " + jsonData.product.Id + ", Name: " + jsonData.product.Name + ", Price: " + jsonData.product.Price;
        }
    });
</script>

<script>
    function deleteProduct(id) {
        var xmlHttp = new XMLHttpRequest();
        xmlHttp.open("DELETE", "/cmd/delete-product", false);
        xmlHttp.send(JSON.stringify({
            "id": id,
        }));

        var jsonData = JSON.parse(xmlHttp.responseText);
        if (jsonData.status === "failure") {
            document.getElementById("error").innerHTML = jsonData.error;
        } else {
            window.location.replace("/products");
        }
    }
</script>

</html>
`)
//line ../templates/productsPage.qtpl:103
}

//line ../templates/productsPage.qtpl:103
func (p *ProductsPage) WriteBody(qq422016 qtio422016.Writer) {
//line ../templates/productsPage.qtpl:103
	qw422016 := qt422016.AcquireWriter(qq422016)
//line ../templates/productsPage.qtpl:103
	p.StreamBody(qw422016)
//line ../templates/productsPage.qtpl:103
	qt422016.ReleaseWriter(qw422016)
//line ../templates/productsPage.qtpl:103
}

//line ../templates/productsPage.qtpl:103
func (p *ProductsPage) Body() string {
//line ../templates/productsPage.qtpl:103
	qb422016 := qt422016.AcquireByteBuffer()
//line ../templates/productsPage.qtpl:103
	p.WriteBody(qb422016)
//line ../templates/productsPage.qtpl:103
	qs422016 := string(qb422016.B)
//line ../templates/productsPage.qtpl:103
	qt422016.ReleaseByteBuffer(qb422016)
//line ../templates/productsPage.qtpl:103
	return qs422016
//line ../templates/productsPage.qtpl:103
}
